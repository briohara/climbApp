{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian.ohara\\\\source\\\\repos\\\\climbApp\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass NewRoute extends React.Component {\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      onReset: this.props.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Route Name:\", React.createElement(\"input\", {\n      name: \"name\",\n      className: \"input-fields\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      id: \"input-labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Route Rating:\", React.createElement(\"select\", {\n      name: \"rating\",\n      className: \"input-fields\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"5.6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"5.6\"), React.createElement(\"option\", {\n      value: \"5.7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"5.7\"), React.createElement(\"option\", {\n      value: \"5.8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"5.8\"), React.createElement(\"option\", {\n      value: \"5.9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"5.9\"), React.createElement(\"option\", {\n      value: \"5.10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"5.10\"), React.createElement(\"option\", {\n      value: \"5.11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"5.11\"), React.createElement(\"option\", {\n      value: \"5.12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"5.12\"), React.createElement(\"option\", {\n      value: \"5.13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"5.13\"), React.createElement(\"option\", {\n      value: \"5.14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"5.14\"))), React.createElement(\"label\", {\n      id: \"input-labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Attempts:\", React.createElement(\"input\", {\n      name: \"attempts\",\n      className: \"input-fields\",\n      type: \"number\",\n      min: \"0\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      id: \"input-labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Points Earned:\", React.createElement(\"input\", {\n      name: \"earned\",\n      className: \"input-fields\",\n      type: \"number\",\n      min: \"0\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      id: \"input-labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Total Points:\", React.createElement(\"input\", {\n      name: \"totalPoints\",\n      className: \"input-fields\",\n      type: \"number\",\n      min: \"0\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"greenButtons\",\n      value: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"reset\",\n      className: \"redButtons\",\n      value: \"Cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nclass League extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      routes: [],\n      isShowing: false\n    };\n  }\n\n  addRoute() {\n    this.setState({\n      isShowing: !this.state.isShowing\n    });\n  }\n\n  removeRoute() {\n    if (this.state.routes.length > 0) {\n      const routes = this.state.routes.slice();\n      routes.pop();\n      const newRoutes = routes;\n      this.setState({\n        routes: newRoutes\n      });\n    }\n\n    ;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const routes = this.state.routes.slice();\n    const newRoute = {\n      name: event.target.name.value,\n      rating: event.target.rating.value,\n      attempts: event.target.attempts.value,\n      pointsEarned: event.target.earned.value,\n      totalPoints: event.target.totalPoints.value\n    }; //Call DB to add routes and refresh routes table\n\n    const newRoutes = routes.concat(newRoute);\n    this.setState({\n      routes: newRoutes\n    });\n    this.setState({\n      isShowing: !this.state.isShowing\n    });\n  }\n\n  handleReset(event) {\n    event.preventDefault();\n    event.target.name.value = \"\";\n    event.target.rating.value = \"\";\n    event.target.attempts.value = \"\";\n    event.target.earned.value = \"\";\n    event.target.totalPoints.value = \"\";\n    this.setState({\n      isShowing: !this.state.isShowing\n    });\n  }\n\n  formatTable() {\n    let formatedHeader = React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Route Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Route Rating\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Number of Attempts\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Points\")); //Call DB for routes list\n\n    console.log(\"About to call DB\");\n    fetch(\"/getRoutes\").then(res => res.json()) //this returns promise \n    .then(res2 => console.log(res2)) //this handles promise from first .then\n    .catch(err => console.log(err));\n    const formatedRoutes = this.state.routes.length > 0 ? this.state.routes.map(route => {\n      const name = route.name,\n            rating = route.rating,\n            attempts = route.attempts,\n            pointsEarned = route.pointsEarned,\n            totalPoints = route.totalPoints;\n      return React.createElement(\"tr\", {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, rating), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, attempts), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, pointsEarned, \"/\", totalPoints));\n    }) : '';\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, formatedHeader, formatedRoutes);\n  }\n\n  render() {\n    const newRoute = this.state.isShowing ? React.createElement(NewRoute, {\n      handleSubmit: this.handleSubmit.bind(this),\n      handleReset: this.handleReset.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : '';\n    const addButton = this.state.isShowing ? '' : React.createElement(\"button\", {\n      className: \"greenButtons\",\n      onClick: this.addRoute.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Add Route\");\n    const removeButton = this.state.isShowing ? '' : React.createElement(\"button\", {\n      className: \"redButtons\",\n      onClick: this.removeRoute.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Remove Route\");\n    return React.createElement(\"div\", {\n      className: \"league\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"league-routes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.formatTable()), newRoute, React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, addButton, removeButton));\n  }\n\n}\n\n;\nReactDOM.render(React.createElement(League, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/brian.ohara/source/repos/climbApp/frontend/src/index.js"],"names":["React","ReactDOM","NewRoute","Component","render","props","handleSubmit","handleReset","League","constructor","state","routes","isShowing","addRoute","setState","removeRoute","length","slice","pop","newRoutes","event","preventDefault","newRoute","name","target","value","rating","attempts","pointsEarned","earned","totalPoints","concat","formatTable","formatedHeader","console","log","fetch","then","res","json","res2","catch","err","formatedRoutes","map","route","bind","addButton","removeButton","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass NewRoute extends React.Component {\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit} onReset={this.props.handleReset}>\r\n                <div className=\"form\">\r\n                <label className=\"input-labels\">\r\n                    Route Name: \r\n                    <input name=\"name\" className=\"input-fields\" type=\"text\" required/>\r\n                </label>\r\n                <label id=\"input-labels\">\r\n                    Route Rating: \r\n                    <select name=\"rating\" className=\"input-fields\" required>\r\n                        <option value=\"\"></option>\r\n                        <option value=\"5.6\">5.6</option>\r\n                        <option value=\"5.7\">5.7</option>\r\n                        <option value=\"5.8\">5.8</option>\r\n                        <option value=\"5.9\">5.9</option>\r\n                        <option value=\"5.10\">5.10</option>\r\n                        <option value=\"5.11\">5.11</option>\r\n                        <option value=\"5.12\">5.12</option>\r\n                        <option value=\"5.13\">5.13</option>\r\n                        <option value=\"5.14\">5.14</option>\r\n                    </select>\r\n                </label>\r\n                <label id=\"input-labels\">\r\n                    Attempts: \r\n                    <input name=\"attempts\" className=\"input-fields\" type=\"number\" min=\"0\" required/>\r\n                </label>\r\n                <label id=\"input-labels\">\r\n                    Points Earned: \r\n                    <input name=\"earned\" className=\"input-fields\" type=\"number\" min=\"0\" required/>\r\n                </label>\r\n                <label id=\"input-labels\">\r\n                    Total Points: \r\n                    <input name=\"totalPoints\" className=\"input-fields\" type=\"number\" min=\"0\" required/>\r\n                </label>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <input type=\"submit\" className=\"greenButtons\" value=\"Save\" />\r\n                    <input type=\"reset\" className=\"redButtons\" value=\"Cancel\" />\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nclass League extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            routes: [],\r\n            isShowing: false\r\n        };\r\n    };\r\n\r\n    addRoute() {\r\n        this.setState({isShowing: !this.state.isShowing});\r\n    };\r\n\r\n    removeRoute() {\r\n        if(this.state.routes.length > 0) {\r\n            const routes = this.state.routes.slice();\r\n            routes.pop();\r\n            const newRoutes = routes;\r\n            this.setState({routes: newRoutes});\r\n        };\r\n    };\r\n\r\n    handleSubmit (event) {\r\n        event.preventDefault();\r\n\r\n        const routes = this.state.routes.slice();\r\n        const newRoute = {name: event.target.name.value,\r\n        rating: event.target.rating.value,\r\n        attempts: event.target.attempts.value,\r\n        pointsEarned: event.target.earned.value,\r\n        totalPoints: event.target.totalPoints.value};\r\n\r\n        //Call DB to add routes and refresh routes table\r\n        const newRoutes = routes.concat(newRoute);\r\n        this.setState({routes: newRoutes});\r\n        this.setState({isShowing: !this.state.isShowing});\r\n        \r\n    };\r\n\r\n    handleReset (event) {\r\n        event.preventDefault();\r\n\r\n        event.target.name.value = \"\";\r\n        event.target.rating.value = \"\";\r\n        event.target.attempts.value = \"\";\r\n        event.target.earned.value = \"\";\r\n        event.target.totalPoints.value = \"\";\r\n\r\n        this.setState({isShowing: !this.state.isShowing});\r\n    };\r\n\r\n    formatTable() {\r\n        let formatedHeader = (\r\n            <tr>\r\n                <th>Route Name</th>\r\n                <th>Route Rating</th>\r\n                <th>Number of Attempts</th>\r\n                <th>Points</th>\r\n            </tr>\r\n        );\r\n\r\n        //Call DB for routes list\r\n        console.log(\"About to call DB\"); \r\n        fetch(\"/getRoutes\")\r\n            .then(res => res.json()) //this returns promise \r\n            .then(res2 => console.log(res2)) //this handles promise from first .then\r\n            .catch(err => console.log(err));\r\n\r\n        \r\n        const formatedRoutes = this.state.routes.length > 0 ? this.state.routes.map((route) => {\r\n            const { name, rating, attempts, pointsEarned, totalPoints } = route;\r\n            return (\r\n                <tr key={name}>\r\n                    <td>{name}</td>\r\n                    <td>{rating}</td>\r\n                    <td>{attempts}</td>\r\n                    <td>{pointsEarned}/{totalPoints}</td>\r\n                </tr>\r\n            );\r\n        }) : '';\r\n\r\n        return (\r\n        <tbody>\r\n            {formatedHeader}\r\n            {formatedRoutes}\r\n        </tbody>);\r\n    };\r\n\r\n    render() {\r\n        const newRoute = this.state.isShowing ? <NewRoute handleSubmit = {this.handleSubmit.bind(this)} handleReset = {this.handleReset.bind(this)}/> : '';\r\n        const addButton = this.state.isShowing ? '' : <button className=\"greenButtons\" onClick={this.addRoute.bind(this)}>Add Route</button>;\r\n        const removeButton = this.state.isShowing ? '' : <button className=\"redButtons\" onClick={this.removeRoute.bind(this)}>Remove Route</button>;\r\n\r\n        return (\r\n            <div className=\"league\">\r\n                <table id=\"league-routes\">\r\n                    {this.formatTable()}\r\n                </table>\r\n                {newRoute}\r\n                <div className=\"buttons\">\r\n                    {addButton}\r\n                    {removeButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nReactDOM.render(<League />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}